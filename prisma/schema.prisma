generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @id @default(cuid())
  name         String
  surname      String
  email        String         @unique
  createdAt    DateTime       @default(now())
  password     String
  verify       Boolean        @default(false)
  visits       Int            @default(0)
  Consultation Consultation[]
}

model UserNoAuth {
  id     String @id @default(cuid())
  visits Int    @default(0)
}

model Admin {
  id        String   @id @default(cuid())
  name      String
  surname   String
  email     String   @unique
  createdAt DateTime @default(now())
  password  String
  userType  String
}

model Psychologist {
  id        String   @id @default(cuid())
  name      String
  surname   String
  email     String   @unique
  createdAt DateTime @default(now())
  password  String
  userType  String
}

model Message {
  id        Int      @id @default(autoincrement())
  chatId    String
  title     String
  position  String
  text      String
  createdAt DateTime @default(now())
  chat      Chat     @relation(fields: [chatId], references: [chatId])
}

model Chat {
  chatId   String    @id
  members  String[]
  call     Boolean   @default(false)
  psy      String?
  messages Message[]
}

model Consultation {
  id           String      @id @default(cuid())
  chatId       String
  userId       String?
  createdAt    DateTime    @default(now())
  psyId        String?
  userNoAuthId String?
  user         User?       @relation(fields: [userId], references: [id], onDelete: Restrict)
  questions    Questions[] @relation("ConsultationToQuestions")
}

model Questions {
  id            Int            @id @default(autoincrement())
  chatId        String
  userId        String?
  question      String
  answer        String
  psyId         String?
  userNoAuthId  String?
  consultations Consultation[] @relation("ConsultationToQuestions")
}

enum Position {
  RIGHT
  LEFT
}
